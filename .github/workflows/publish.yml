name: Build and Publish Release

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Compile TypeScript
        run: npm run compile

      - name: Install latest version of @vscode/vsce
        run: npm install -g @vscode/vsce@latest

      - name: Package VSIX
        run: npx vsce package

      - name: List Files
        run: ls

      - name: Get package version1
        id: get_version1
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          IFS='.' read -ra ADDR <<< "$VERSION"
          echo "VERSION_MAJOR=${ADDR[0]}" >> $GITHUB_ENV
          echo "VERSION_MINOR=${ADDR[1]}" >> $GITHUB_ENV
          echo "VERSION_PATCH=${ADDR[2]}" >> $GITHUB_ENV

      - name: List Files
        run: ls

      # - name: GH Release Action
      #   uses: zcubbs/gh-release-action@v1.0.6
      #   with:
      #     major: ${{ env.VERSION_MAJOR }}
      #     minor: ${{ env.VERSION_MINOR }}
      #     patch: ${{ env.VERSION_PATCH }}
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     files: sagemath-enhanced-${{ env.VERSION }}.vsix
      - name: Get package version2
        id: get_version2
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Build
        run: echo "Build complete"

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: sagemath-enhanced-${{ env.VERSION }}.vsix  # 指定要上传的文件
          token: ${{ secrets.DEPLOY_KEY }}  # 使用 GitHub Token 来认证
          draft: false  # 指定这不是一个草稿版本
          prerelease: false  # 指定这不是一个预发布版本
          generate_release_notes: true  # 自动生成发布说明
          tag_name: ${{ github.ref_name }}  # 使用推送的标签名
